{"version":3,"sources":["TaskComponents/store/Store.js","TaskComponents/TaskInput.js","TaskComponents/TaskList.js","TaskComponents/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","tasks","Provider","props","children","useState","id","text","completed","setTasks","value","addTask","newTask","length","Math","max","map","t","removeTask","newTasks","filter","toggleTask","foundTask","find","useTasks","useContext","useStyles","makeStyles","theme","textField","width","paddingRight","breakpoints","down","button","padding","TaskInput","classes","setNewTask","Grid","container","item","TextField","className","label","variant","onChange","e","target","Button","disabled","color","onClick","TaskList","setFilter","filteredTasks","useMemo","List","task","ListItem","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","IconButton","aria-label","justify","withProvider","Component","Box","p","direction","root","height","paddingTop","spacing","App","useTheme","matches","useMediaQuery","alignItems","Paper","elevation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f480d09.chunk.js","sourcesContent":["import { useContext, createContext, useState } from 'react'\r\n\r\nconst Context = createContext (\r\n    {\r\n        tasks: []\r\n    }\r\n);\r\n\r\nconst Provider = (props) => {\r\n    const { children } = props;\r\n\r\n    const [tasks, setTasks ] = useState([\r\n        {\r\n           id: 0,\r\n           text: \"doctor appointment\",\r\n           completed: false \r\n        },\r\n        {\r\n            id: 1,\r\n            text: \"feed the dog\",\r\n            completed: false \r\n        },\r\n        {\r\n            id: 2,\r\n            text: \"grocery shopping\",\r\n            completed: false \r\n        },\r\n    ]);\r\n\r\n    const addTask = (text) => {\r\n        const nextId = tasks.length > 0 ? Math.max(...tasks.map(t => t.id)) + 1 : 0;\r\n        const newTask = {\r\n            id: nextId,\r\n            text,\r\n            completed: false\r\n        }\r\n        setTasks([...tasks, newTask])\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        const newTasks = tasks.filter(t => t.id !== id);\r\n        setTasks(newTasks)\r\n    };\r\n\r\n    const toggleTask = (id) => {\r\n        const foundTask = tasks.find(t => t.id === id);\r\n        if (foundTask) {\r\n            foundTask.completed = !foundTask.completed;\r\n        }\r\n        const newTasks = tasks.map(t => {\r\n            if (t.id === id) {\r\n                return foundTask\r\n            }\r\n            return t;\r\n        });\r\n        setTasks(newTasks)\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={{ tasks, addTask, removeTask, toggleTask }}>{children}</Context.Provider>\r\n    )\r\n};\r\n\r\nexport const useTasks = () => useContext(Context);\r\n\r\nexport const withProvider = (Component) => {\r\n    return (props) => {\r\n        return <Provider>\r\n            <Component {...props} />\r\n        </Provider>\r\n    };\r\n};","import { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useTasks } from './store/Store'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        width: 400,\r\n        paddingRight: 10,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 180,\r\n        },\r\n    },\r\n    button: {\r\n        padding: 15.5,\r\n    }\r\n}));\r\n\r\nfunction TaskInput(props) {\r\n    const { addTask } = useTasks();\r\n    const classes = useStyles();\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const handleClick = () => {\r\n        addTask(newTask);\r\n        setNewTask(\"\");\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item>\r\n                <TextField\r\n                    className={classes.textField} \r\n                    id=\"outlined-basic\" \r\n                    label=\"Today's task\" \r\n                    variant=\"outlined\" \r\n                    value={newTask}\r\n                    onChange={(e) => setNewTask(e.target.value)}\r\n                    />\r\n            </Grid>\r\n            <Grid item >\r\n                <Button \r\n                    disabled={newTask.length === 0}\r\n                    className={classes.button}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={handleClick}> \r\n                        Add Task\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskInput\r\n","import { useState, useMemo } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useTasks } from './store/Store'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nfunction TaskList() {\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const { tasks, toggleTask, removeTask } = useTasks();\r\n    const filteredTasks = useMemo(() => {\r\n        \r\n        if (filter === \"all\") {\r\n            return tasks;\r\n        }else if (filter === \"completed\") {\r\n            return tasks.filter(t => t.completed);\r\n        }else if (filter === \"notCompleted\") {\r\n            return tasks.filter(t => !t.completed);\r\n        }\r\n\r\n    }, [tasks, filter]);\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {filteredTasks.map((task) => {\r\n            \r\n                    return (\r\n                    <ListItem>\r\n                            <ListItemText primary={task.text} />\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox checked={task.completed} onClick={() => toggleTask(task.id) }/>\r\n                                <IconButton onClick={() => removeTask(task.id)} aria-label=\"delete\">\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n            <Grid container justify= \"center\">\r\n                <Button onClick={() => setFilter(\"all\")}>All</Button>\r\n                <Button onClick={() => setFilter(\"completed\")}>Completed</Button>\r\n                <Button onClick={() => setFilter(\"notCompleted\")}>Due</Button>\r\n            </Grid>\r\n        </>\r\n      );\r\n    };\r\n\r\nexport default TaskList\r\n","\r\nimport { Box } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TaskInput from './TaskInput';\r\nimport TaskList from './TaskList';\r\nimport { withProvider } from './store/Store'\r\n\r\nfunction Task() {\r\n\r\n  return (\r\n      <Box p={3}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <TaskInput />\r\n          </Grid>\r\n          <Grid item>\r\n            <TaskList />\r\n          </Grid>\r\n        </Grid>   \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default withProvider(Task);\r\n","\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport Task from './TaskComponents/Task';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    [theme.breakpoints.down('xs')]: {\n      paddingTop: theme.spacing(2)\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles()\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Grid \n      className={classes.root}\n      container\n      justify=\"center\"\n      alignItems={matches ? \"flex-start\" : \"center\"}\n      >\n      <Grid item>\n        <Paper elevation={3}>\n          <Task />\n        </Paper>\n      </Grid> \n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}