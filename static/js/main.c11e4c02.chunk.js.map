{"version":3,"sources":["Hooks/UseLocalStorage.js","TaskComponents/store/Store.js","TaskComponents/TaskInput.js","TaskComponents/TaskList.js","TaskComponents/Task.js","Theme/Theme.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Context","createContext","tasks","Provider","props","children","setTasks","addTask","text","newTask","id","length","Math","max","map","t","completed","removeTask","newTasks","filter","toggleTask","foundTask","find","useTasks","useContext","useStyles","makeStyles","theme","textField","width","paddingRight","breakpoints","down","button","padding","TaskInput","classes","setNewTask","Grid","container","TextField","className","label","variant","onChange","e","target","Button","disabled","color","onClick","listItem","wordWrap","paddingTop","paddingBottom","list","decoration","textDecoration","TaskList","setFilter","filteredTasks","useMemo","List","task","ListItem","ListItemText","primary","ListItemSecondaryAction","Checkbox","inputProps","checked","IconButton","aria-label","justify","Box","p","withProvider","Component","pt","pb","pr","pl","direction","createMuiTheme","palette","type","green","secondary","red","themeDark","Theme","defaultTheme","darkMode","ThemeProvider","root","height","position","overflow","backgroundColor","background","paper","spacing","header","fontSize","fontWeight","withTheme","setDarkMode","useTheme","matches","useMediaQuery","alignItems","Paper","elevation","display","justifyContent","Typography","gutterBottom","FormControlLabel","control","Switch","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c11e4c02.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n\r\n\r\nexport default useLocalStorage\r\n","import { useContext, createContext } from 'react'\r\nimport useLocalStorage from '../../Hooks/UseLocalStorage';\r\n\r\n\r\nconst Context = createContext (\r\n    {\r\n        tasks: []\r\n    }\r\n);\r\n\r\nconst Provider = (props) => {\r\n    const { children } = props;\r\n\r\n    const [tasks, setTasks ] = useLocalStorage(\"tasks\", []);\r\n\r\n    const addTask = (text) => {\r\n        const nextId = tasks.length > 0 ? Math.max(...tasks.map(t => t.id)) + 1 : 0;\r\n        const newTask = {\r\n            id: nextId,\r\n            text,\r\n            completed: false\r\n        }\r\n        setTasks([...tasks, newTask])\r\n    };\r\n\r\n    const removeTask = (id) => {\r\n        const newTasks = tasks.filter(t => t.id !== id);\r\n        setTasks(newTasks)\r\n    };\r\n\r\n    const toggleTask = (id) => {\r\n        const foundTask = tasks.find(t => t.id === id);\r\n        if (foundTask) {\r\n            foundTask.completed = !foundTask.completed;\r\n        }\r\n        const newTasks = tasks.map(t => {\r\n            if (t.id === id) {\r\n                return foundTask\r\n            }\r\n            return t;\r\n        });\r\n        setTasks(newTasks)\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={{ tasks, addTask, removeTask, toggleTask }}>{children}</Context.Provider>\r\n    )\r\n};\r\n\r\nexport const useTasks = () => useContext(Context);\r\n\r\nexport const withProvider = (Component) => {\r\n    return (props) => {\r\n        return <Provider>\r\n            <Component {...props} />\r\n        </Provider>\r\n    };\r\n};","import { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useTasks } from './store/Store'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        width: 300,\r\n        paddingRight: 10,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 215,\r\n        },\r\n    },\r\n    button: {\r\n        padding: 15.5,\r\n    }\r\n}));\r\n\r\nfunction TaskInput() {\r\n    const { addTask } = useTasks();\r\n    const classes = useStyles();\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const handleClick = () => {\r\n        addTask(newTask);\r\n        setNewTask(\"\");\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item>\r\n                <TextField\r\n                    className={classes.textField} \r\n                    id=\"outlined-basic\" \r\n                    label=\"Today's task\" \r\n                    variant=\"outlined\" \r\n                    value={newTask}\r\n                    onChange={(e) => setNewTask(e.target.value)}\r\n                    />\r\n            </Grid>\r\n            <Grid item >\r\n                <Button \r\n                    disabled={newTask.length === 0}\r\n                    className={classes.button}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={handleClick}> \r\n                        Add Task\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskInput\r\n","import { useState, useMemo } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useTasks } from './store/Store'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n        width: 300,\r\n        wordWrap: \"break-word\",\r\n        paddingTop: 20,\r\n        paddingBottom: 20, \r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 210,\r\n        },\r\n    },\r\n    list: {\r\n        paddingTop: 10,\r\n        paddingBottom: 10\r\n        \r\n    },\r\n    decoration: {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        textDecoration: \"line-through\",\r\n        color: \"gray\"\r\n    }\r\n}));\r\n\r\n\r\nfunction TaskList() {\r\n    const classes = useStyles();\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const { tasks, toggleTask, removeTask } = useTasks();\r\n    const filteredTasks = useMemo(() => {\r\n        \r\n        if (filter === \"all\") {\r\n            return tasks;\r\n        }else if (filter === \"completed\") {\r\n            return tasks.filter(t => t.completed);\r\n        }else if (filter === \"notCompleted\") {\r\n            return tasks.filter(t => !t.completed);\r\n        }\r\n\r\n    }, [tasks, filter]);\r\n\r\n    return (\r\n        <>\r\n            <List className={classes.list}>\r\n                {filteredTasks.map((task) => {\r\n            \r\n                    return (\r\n                    <ListItem className={classes.listItem} key={task.id}>\r\n                            <ListItemText primary={task.text} className={task.completed ? classes.decoration : classes.list}/>\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox \r\n                                color=\"primary\"\r\n                                inputProps={{ 'aria-label': 'checkbox with default color' }} \r\n                                checked={task.completed} \r\n                                onClick={() => toggleTask(task.id)}/>\r\n                                <IconButton color=\"secondary\" onClick={() => removeTask(task.id)} aria-label=\"delete\">\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n            <Grid container justify= \"center\">\r\n                <Box p={1}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setFilter(\"all\")}>All</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setFilter(\"completed\")}>Completed</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setFilter(\"notCompleted\")}>Due</Button>\r\n                </Box>\r\n            </Grid>\r\n        </>\r\n      );\r\n    };\r\n\r\nexport default TaskList\r\n","\r\nimport { Box } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TaskInput from './TaskInput';\r\nimport TaskList from './TaskList';\r\nimport { withProvider } from './store/Store'\r\n\r\nfunction Task() {\r\n\r\n  return (\r\n      <Box pt={3} pb={3} pr={2} pl={2}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <TaskInput />\r\n          </Grid>\r\n          <Grid item>\r\n            <TaskList />\r\n          </Grid>\r\n        </Grid>   \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default withProvider(Task);\r\n","import { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport red from '@material-ui/core/colors/red';\r\nimport useLocalStorage from '../Hooks/UseLocalStorage';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: green, \r\n        secondary: red,\r\n\r\n    }\r\n});\r\n\r\nconst themeDark = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: green,\r\n        secondary: red,\r\n        \r\n    }\r\n});\r\n\r\nconst Theme = (props) => {\r\n    const { children, darkMode } = props;\r\n    const defaultTheme = darkMode ? themeDark : theme;\r\n\r\n    return <ThemeProvider theme={defaultTheme}>{children}</ThemeProvider>\r\n}\r\n\r\nexport const withTheme = (Component) => {\r\n\r\n    return (props) => {\r\n        const [ darkMode, setDarkMode ] = useLocalStorage(\"darkMode\", false);\r\n        return (\r\n            <Theme darkMode={darkMode}>\r\n                <Component {...props} darkMode={darkMode} setDarkMode={setDarkMode} />\r\n            </Theme>\r\n        )\r\n    };\r\n};","\nimport Grid from '@material-ui/core/grid';\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from '@material-ui/core';\nimport Task from './TaskComponents/Task';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withTheme } from './Theme/Theme';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    overflow: \"auto\",\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.color,\n    [theme.breakpoints.down('xs')]: {\n      paddingTop: theme.spacing(2),\n    },\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 600,\n  }\n}));\n\nfunction App(props) {\n  const { darkMode, setDarkMode } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Grid \n      className={classes.root}\n      container\n      justify=\"center\"\n      alignItems={matches ? \"flex-start\" : \"center\"}>\n      <Grid item>\n        <Paper elevation={3}>\n          <Box pt={5} pb={2} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography className={classes.header} variant=\"h1\" gutterBottom>\n              Task Manager\n            </Typography>\n          </Box>\n          <Task />\n        </Paper>\n        <Grid>\n          <FormControlLabel\n            control={\n              <Switch \n                checked={darkMode} \n                color=\"primary\"\n                onChange={() => setDarkMode(!darkMode)} \n              />\n            }\n            label=\"Dark Mode\"\n          />\n        </Grid>\n      </Grid> \n\n    </Grid>\n  );\n}\n\nexport default withTheme(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}